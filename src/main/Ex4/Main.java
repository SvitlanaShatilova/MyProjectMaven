package main.Ex4;
/**· Що таке Серіалізація/десеріалізація?
        · Що таке Маршаллінг/демаршаллінг?
        · Розкажіть про XML, у чому різниця між HTML?
        · Які парсери в XML знаєте?
        · Що робить JSON?
        · Що таке JAXB?*/

public class Main {
    public static void main(String[] args) {
        System.out.println("\n1. Серіалізація/десеріалізація:");
        System.out.println("Серіалізація – це процес передання стану об'єкта в потік байтів для " +
                "збереження його в пам'яті, у базі даних або у файлі.");
        System.out.println("Десеріалізація - це процес відновлення об'єкта з цих байтів.");
        System.out.println();
        System.out.println("2. Маршаллінг/демаршаллінг:");
        System.out.println("Міжпроцесна, міждоменна та міжрівнева серіалізація-десеріалізація, " +
                "називається маршалингом-демаршалингом.\nМаршалинг — процес перетворення представлення об'єкта в " +
                "пам'яті у формат даних, який придатний для зберігання або передання. \nЗазвичай застосовується," +
                " коли дані необхідно передавати між різними частинами однієї програми або від однієї програми до іншої. " +
                "\nАнмаршалинг – зворотний процес маршалингу. ");
        System.out.println();
        System.out.println("3. XML та HTML:");
        System.out.println("XML (Extensible Markup Language) - це мова, яка дозволяє користувачеві" +
                " визначати представлення даних або структури даних, де значення призначаються в кожному полі структури.");
        System.out.println("HTML (мова гіпертекстової розмітки) є мовою розмітки для створення веб-сторінок.");
        System.out.println("<<< Ключові відмінності між XML і HTML >>>");
        System.out.println("- XML - це мова розмітки на основі тексту, яка має структуру самоопису і " +
                "може ефективно визначати іншу мову розмітки. З іншого боку, HTML є визначеною мовою " +
                "розмітки і має обмежені можливості.");
        System.out.println("- XML забезпечує логічне структурування документа, в той час як структура HTML " +
                "є попередньо визначеною, де використовуються мітки \"head\" і \"body\".");
        System.out.println("- Коли мова йде про мову, то HTML є нечутливим до регістру. На відміну від цього," +
                " XML є чутливим до регістру.");
        System.out.println("- HTML був розроблений з акцентом на презентаційні особливості даних. " +
                "На відміну від цього, XML - це специфічні дані, де зберігання та передача даних були першочерговими.");
        System.out.println("- XML не допускає жодних помилок, якщо деякі з помилок у коді не можуть " +
                "бути проаналізовані. Навпаки, в HTML невеликі помилки можна знехтувати.");
        System.out.println("- Біліпростори в XML використовуються для конкретного використання, " +
                "оскільки XML розглядає кожен символ. Навпаки, HTML може ігнорувати пробіли.");
        System.out.println("- Теги в XML обов'язкові для закриття, тоді як в HTML відкритий тег " +
                "також може працювати повністю.");
        System.out.println("- Вкладання в XML повинно здійснюватися правильно, він має велике значення " +
                "в синтаксисі XML. І навпаки, HTML не дбає про гніздування.");
        System.out.println();
        System.out.println("4. парсери в XML:");
        System.out.println("Існують дві стратегії обробки XML-документів: DOM (Document Object Model) і " +
                "SAX (Simple API for XML). \nОсновна їхня відмінність пов'язана з тим, що використання " +
                "DOM дає змогу читати і вносити зміни в наявний XML-документ, а також створювати новий. " +
                "\nСтратегія використання SAX ґрунтується на тому, що вміст XML-документа тільки аналізується. " +
                "\nXML-текст може бути великих розмірів: DOM повинен увесь документ \"заковтнути\" і проаналізувати, " +
                "а SAX-парсер обробляє XML-документ послідовно і не потребує додаткової пам'яті.");
        System.out.println();
        System.out.println("5. JSON:");
        System.out.println("JSON (англ. JavaScript Object Notation, укр. запис об'єктів JavaScript, " +
                "вимовляється джéйсон[1]) — це текстовий формат обміну даними між комп'ютерами. \nJSON базується на " +
                "тексті, може бути прочитаним людиною. \nФормат дає змогу описувати об'єкти та інші структури даних. " +
                "\nЦей формат використовується переважно для передавання структурованої інформації через мережу " +
                "(завдяки процесу, що називають серіалізацією).");
        System.out.println();
        System.out.println("6. JAXB:");
        System.out.println("Java Architecture for XML Binding (JAXB) дає змогу розробникам ставити у відповідність Java-класи та XML-представлення. " +
                "\nJAXB надає дві основні можливості: маршалірування Java-об'єктів у XML і навпаки, тобто демаршалізація з XML назад у Java-об'єкт. ");



    }
}
